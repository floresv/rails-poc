---
openapi: 3.0.3
info:
  title: rails_api_base
  version: 1.0.0
servers: []
paths:
  "/api/v1/status":
    get:
      summary: status
      tags:
      - API::V1::Health
      responses:
        '200':
          description: returns the api status
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                required:
                - online
              example:
                online: true

  "/api/v1/wishlists":
    get:
      summary: List all wishlists
      tags:
      - API::V1::Wishlists
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Returns a list of wishlists
          content:
            application/json:
              schema:
                type: object
                properties:
                  wishlists:
                    type: array
                    items:
                      $ref: '#/components/schemas/Wishlist'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
    
    post:
      summary: Create a wishlist
      tags:
      - API::V1::Wishlists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wishlist:
                  type: object
                  properties:
                    wishlistable_type:
                      type: string
                      enum: ['Meal']
                    wishlistable_id:
                      type: integer
                  required:
                    - wishlistable_type
                    - wishlistable_id
      responses:
        '201':
          description: Wishlist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  "/api/v1/wishlists/{id}":
    delete:
      summary: Delete a wishlist
      tags:
      - API::V1::Wishlists
      parameters:
        - name: id
          in: path
          description: ID of the wishlist to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Wishlist deleted successfully
        '404':
          description: Wishlist not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  "/api/v1/meals":
    get:
      summary: List all meals
      tags:
      - API::V1::Meals
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Returns a list of meals
          content:
            application/json:
              schema:
                type: object
                properties:
                  meals:
                    type: array
                    items:
                      $ref: '#/components/schemas/Meal'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer

  "/api/v1/meals/{id}":
    get:
      summary: Get a specific meal
      tags:
      - API::V1::Meals
      parameters:
        - name: id
          in: path
          description: ID of the meal to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the requested meal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        '404':
          description: Meal not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  "/api/v1/categories":
    get:
      summary: List all categories
      tags:
      - API::V1::Categories
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Returns a list of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer

  "/api/v1/categories/{id}":
    get:
      summary: Get a specific category
      tags:
      - API::V1::Categories
      parameters:
        - name: id
          in: path
          description: ID of the category to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the requested category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  "/api/v1/orders":
    get:
      summary: List all orders
      tags:
      - API::V1::Orders
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Returns a list of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer

    post:
      summary: Create a new order
      tags:
      - API::V1::Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                order_items_attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      meal_id:
                        type: integer
                      quantity:
                        type: integer
              required:
                - username
                - email
                - order_items_attributes
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  "/api/v1/orders/{id}":
    get:
      summary: Get a specific order
      tags:
      - API::V1::Orders
      parameters:
        - name: id
          in: path
          description: ID of the order to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the requested order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      summary: Delete a specific order
      tags:
      - API::V1::Orders
      parameters:
        - name: id
          in: path
          description: ID of the order to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order deleted successfully
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    Wishlist:
      type: object
      properties:
        id:
          type: integer
        wishlistable_type:
          type: string
        wishlistable_id:
          type: integer
        created_at:
          type: string
          format: date-time
        wishlistable:
          oneOf:
            - $ref: '#/components/schemas/Meal'
      required:
        - id
        - wishlistable_type
        - wishlistable_id
        - created_at

    Meal:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price_cents:
          type: integer
        price_currency:
          type: string
          default: "USD"
        image_url:
          type: string
          nullable: true
        ext_str_meal_thumb:
          type: string
          nullable: true
        ext_id_meal:
          type: integer
          nullable: true
        category_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        category:
          $ref: '#/components/schemas/Category'
      required:
        - id
        - name
        - price_cents
        - price_currency
        - category_id

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name

    Order:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        order_items:
          type: array
          items:
            type: object
            properties:
              meal_id:
                type: integer
              quantity:
                type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - username
        - email
        - order_items

